(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{60:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"javascript-学习回顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-学习回顾","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 学习回顾")]),t._v(" "),a("blockquote",[a("p",[t._v("以问答形式记录关键点")])]),t._v(" "),a("p",[t._v("Q1. 语句与表达式的区别？")]),t._v(" "),a("p",[a("code",[t._v("语句是实现某种操作，而表达式是得到一个结果")])]),t._v(" "),a("p",[t._v("Q2. var在哪些地方有别于ES6的const，let？")]),t._v(" "),a("p",[a("code",[t._v("var可以重复声明而不报错，并且声明会被提升")])]),t._v(" "),a("p",[t._v("Q3. switch语句内部采用的是哪种“相等运算符”？")]),t._v(" "),a("p",[a("code",[t._v("===，严格相等运算符")])]),t._v(" "),a("p",[t._v("Q4. 标签有什么用？")]),t._v(" "),a("p",[a("code",[t._v("类似break，continue语句可以跳出多重循环或代码块")])]),t._v(" "),a("p",[t._v("Q5. 原始类型其实只有三种，哪三种？")]),t._v(" "),a("p",[a("code",[t._v("数值，字符串，布尔值")])]),t._v(" "),a("p",[t._v("Q6. 广义的对象和狭义的对象有什么区别？")]),t._v(" "),a("p",[a("code",[t._v("一种解释里，把complex type 译为 合成类型。广义的对象包括：狭义的对象，数组以及函数")])]),t._v(" "),a("p",[t._v("Q7. undefined,null 是原始类型还是合成类型（复杂类型）？")]),t._v(" "),a("p",[a("code",[t._v("都不是，只是两个特殊值")])]),t._v(" "),a("p",[t._v("Q8. typeof的优缺点？")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("优点：可以检查一个没有声明的变量而不报错\n缺点：无法区分对象里的数组与狭义的对象以及"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("的区别（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v("可以）\n")])])]),a("p",[t._v("Q9. null和undefined在数字的转换上有什么不同？")]),t._v(" "),a("p",[a("code",[t._v("null会处理成0，而undefined会被处理成NaN")])]),t._v(" "),a("p",[t._v("Q10. 对于undefined，需要注意的地方？")]),t._v(" "),a("p",[a("code",[t._v("它表示的是“为定义”，因此不应把它作为初始值变量赋值")])]),t._v(" "),a("p",[t._v("Q11. 哪些值是“假值”？")]),t._v(" "),a("p",[a("code",[t._v("null, undefined, \"\", '', 0, (NaN)")])]),t._v(" "),a("p",[t._v("Q12. 1和1.0在===上相等吗？")]),t._v(" "),a("p",[a("code",[t._v("相等哦～ 因为所有数字最终都是以64位浮点数形式存储的")])]),t._v(" "),a("p",[t._v("Q13. 64位浮点数的实际存储形式？")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("国际标准 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IEEE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("754")]),t._v("\n规定：如果指数部分的值在"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("到"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2047")]),t._v("之间（不含两个端点），那么有效数字的第一位默认总是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，不保存在"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("位浮点数之中。\n存储结构：\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("位：符号位，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("表示正数，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("表示负数\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("位到第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("位（共"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("位）：指数部分\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("位到第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("位（共"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("52")]),t._v("位）：小数部分（即有效数字）\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("计算公式：")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("符号位 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("xx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("xx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("指数部分\n有效数字个数决定了它能保证的精度度，在整数的精准度在"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v("到"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v("（这里的"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v("是加上前面那个"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740992111")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际显示9007199254740992000")]),t._v("\n")])])]),a("p",[t._v("Q14. 64位浮点数最大表示的数值？")]),t._v(" "),a("p",[a("code",[t._v("由于指数部分11位，即0～2047，其中一半表示负数，所以数值范围是2^1024到2^-1024(开区间)")])]),t._v(" "),a("p",[t._v("Q15. 什么时候会数字会自动编程科学计数法显示？")]),t._v(" "),a("p",[a("code",[t._v("小数点前的数字多于21位；小数点后的零多于5个")])]),t._v(" "),a("p",[t._v("Q16. -0 与 +0 在哪种场合下不等价？")]),t._v(" "),a("p",[a("code",[t._v("当作为分母的时候")])]),t._v(" "),a("p",[t._v("Q17. Infinity > NaN 返回什么？ 那Infinity < NaN，这样又返回什么？")]),t._v(" "),a("p",[a("code",[t._v("都返回false")])]),t._v(" "),a("p",[t._v("Q18. 0 * Infinity返回什么？")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n与之类似的还有：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])]),a("p",[t._v("Q19. parseInt(1000000000000000000000.5) ，结果返回什么？")]),t._v(" "),a("p",[a("code",[t._v("1")])]),t._v(" "),a("p",[t._v("Q20. String(0x11), 输出是什么？")]),t._v(" "),a("p",[a("code",[t._v('"17",因为优先是对这个格式进行十进制处理，或者科学计数法处理')])]),t._v(" "),a("p",[t._v("Q21. console.log('你好，世界'.length)，输入什么？")]),t._v(" "),a("p",[a("code",[t._v("5, 大部分中文字符已经纳入一个字符，但是依旧存在一些字符在浏览器上是一个字符，而javascript存储为2个字符")])]),t._v(" "),a("p",[t._v("Q22. Base64转码的两个原生方法？")]),t._v(" "),a("p",[a("code",[t._v("btoa, atob:前者转为Base64编码，后者反编译回去。")])]),t._v(" "),a("p",[t._v("Q23. 对于非 ASCII 码字符转 Base64 编码，如何处理？")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("btoa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("atob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "JUU0JUJEJUEwJUU1JUE1JUJE"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JUU0JUJEJUEwJUU1JUE1JUJE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "你好"')]),t._v("\n")])])]),a("p",[t._v("Q24. { foo: 123 }, 这是表达式还是语句？")])])}],!1,null,null,null);s.default=e.exports}}]);